name: Set Up Depot Tools
description: Sets up Depot Tools and initializes gclient.
inputs:
  run_sync:
    description: "Whether or not to run gclient sync."
    default: "true"
runs:
  using: "composite"
  steps:
      - name: Get depot tools
        env:
          DEPOT_TOOLS_REVISION: 22e5a04e5975a4308c15b45b34b1b120bd0c7224
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          git -C $GITHUB_WORKSPACE/depot_tools reset --hard ${DEPOT_TOOLS_REVISION}
        shell: bash
      - name: Add depot tools to PATH
        run: echo "$GITHUB_WORKSPACE/depot_tools" >> $GITHUB_PATH
        shell: bash
      - name: Set GIT_CACHE_PATH
        run: export GIT_CACHE_PATH=/gclient-sync-cache
        shell: bash
      # - name: Write test if doesn't exist
      #   run: touch /gclient-sync-cache/helloworld.txt
      #   shell: bash
      - name: Write test if doesn't exist
        run: |
          ls -la /gclient-sync-cache
          echo "0" >> /gclient-sync-cache/helloworld.txt
          ls -la /gclient-sync-cache
        shell: bash
      - name: See whats there
        run: ls /gclient-sync-cache
        shell: bash
      - name: Testing writing
        run: sed -i 's/\([0-9]\+\)/$((\1+1))/g' /gclient-sync-cache/helloworld.txt && sleep 1000000
        shell: bash
      - name: Generate gclient file
        run: gclient config --cache-dir=/gclient-sync-cache --name=src --custom-var=download_remoteexec_cfg=True --custom-var='rbe_instance="projects/cobalt-actions-prod/instances/default_instance"' https://github.com/${{ github.repository }}
        shell: bash
      - name: Set target OS for Android
        if: ${{ contains(matrix.platform, 'android') }}
        run: |
          echo "target_os=['android']" >> .gclient
          gclient validate
        shell: bash
      - name: gclient sync
        if: inputs.run_sync == 'true'
        run: gclient sync -v --shallow --no-history -r ${{ github.sha }} --cache-dir=/gclient-sync-cache
        shell: bash
      - name: Disable Chromium client side build telemetry
        run: build_telemetry opt-out
        shell: bash
